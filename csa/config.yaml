inchannel: 1  # inchannel=1 means magnitude MR image input, inchannel=2 means complex MR image input
outchannel: 1  # outchannel equals to inchannel
ndf: 32  # basic channel numbers of network
convType: "ResDoubleConv"  # convolution function to be used, which implements in Model.py
attType: "CSA"  # attention function to be used, which implements in Model.py
loss: "l1"  # loss function to be used, which only has two options: l1 or combo
csa_k: 2  # the execution times of the Hadamard Product in CSA

dataDir: "../../Data/data/"  # data path
trainMat: "trainData.mat"  # train dataset
valMat: "testData.mat"  # validation dataset
testMat: "testData.mat"  # test dataset
maskName: "../../Data/uniform_256_256_30.mat"  # the path of sampling mask

device: "cuda:0" # the device to be used
lr: 0.0002  # learning rate
batch_size: 2  # batch size dunring training
train_num_workers: 0 # the number of workers of dataloader during training
val_num_workers: 0 # the number of workers of dataloader during validation
stopPatience: 10 # the patience of early stopping
earlyStopEpoch: 100 # the epoch when early stopping works
lrReducePatience: 5 # the patience of learning rate scheduler
epochs: 200 # Maximum training epochs
save_step: 20 # the interval for saving checkpoints
tb_write: 1 # whether to use tensorboard

save_name: "unet_uniform30"  # The name of the folder where the results are kept. The string before "_" must be the model name
output_dir: "./checkpoints/" # the total path for saving checkpoints
tb_dir: "./tensorboard/" # the total path for saving tensorboard